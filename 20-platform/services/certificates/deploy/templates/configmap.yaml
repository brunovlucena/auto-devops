apiVersion: v1
kind: ConfigMap
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
data:
  # This will be populated by the ca-injector job below
  ca-bundle.crt: ""
---
apiVersion: batch/v1
kind: Job
metadata:
  name: linkerd-ca-injector
  namespace: linkerd
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    metadata:
      name: linkerd-ca-injector
    spec:
      serviceAccountName: linkerd-ca-injector
      restartPolicy: Never
      containers:
      - name: ca-injector
        image: alpine/k8s:1.28.13
        command:
        - /bin/sh
        - -c
        - |
          set -e
          
          # Install jq for JSON processing
          apk add --no-cache jq
          
          echo "Waiting for linkerd-identity-issuer secret to be ready..."
          kubectl wait --for=condition=Ready certificate linkerd-identity-issuer -n linkerd --timeout=300s
          
          echo "Extracting CA certificate from secret..."
          CA_CERT_B64=$(kubectl get secret linkerd-identity-issuer -n linkerd -o jsonpath='{.data.ca\.crt}')
          CA_CERT=$(echo "$CA_CERT_B64" | base64 -d)
          
          echo "Updating ConfigMap with CA certificate..."
          # Create a temporary patch file to handle multi-line certificate properly
          cat > /tmp/patch.json <<EOF
{
  "data": {
    "ca-bundle.crt": $(echo "$CA_CERT" | jq -Rs .)
  }
}
EOF
          
          kubectl patch configmap linkerd-identity-trust-roots -n linkerd --patch-file /tmp/patch.json
          
          echo "CA certificate successfully injected into ConfigMap"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkerd-ca-injector
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-ca-injector
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-ca-injector
  namespace: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-ca-injector
  namespace: linkerd
roleRef:
  kind: Role
  name: linkerd-ca-injector
  apiGroup: rbac.authorization.k8s.io 